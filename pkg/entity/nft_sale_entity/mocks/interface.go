// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/entity/nft_sale_entity/interface.go

// Package mock_nftsaleentity is a generated GoMock package.
package mock_nftsaleentity

import (
	reflect "reflect"

	model "github.com/consolelabs/indexer-api/pkg/model"
	gomock "github.com/golang/mock/gomock"
)

// MockINftSaleEntity is a mock of INftSaleEntity interface.
type MockINftSaleEntity struct {
	ctrl     *gomock.Controller
	recorder *MockINftSaleEntityMockRecorder
}

// MockINftSaleEntityMockRecorder is the mock recorder for MockINftSaleEntity.
type MockINftSaleEntityMockRecorder struct {
	mock *MockINftSaleEntity
}

// NewMockINftSaleEntity creates a new mock instance.
func NewMockINftSaleEntity(ctrl *gomock.Controller) *MockINftSaleEntity {
	mock := &MockINftSaleEntity{ctrl: ctrl}
	mock.recorder = &MockINftSaleEntityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINftSaleEntity) EXPECT() *MockINftSaleEntityMockRecorder {
	return m.recorder
}

// SalesWebhook mocks base method.
func (m *MockINftSaleEntity) SalesWebhook(nftListing *model.NftListing) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SalesWebhook", nftListing)
	ret0, _ := ret[0].(error)
	return ret0
}

// SalesWebhook indicates an expected call of SalesWebhook.
func (mr *MockINftSaleEntityMockRecorder) SalesWebhook(nftListing interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SalesWebhook", reflect.TypeOf((*MockINftSaleEntity)(nil).SalesWebhook), nftListing)
}
